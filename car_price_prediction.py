# -*- coding: utf-8 -*-
"""Car_Price_Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SWLSIsxhLQTJxEEa08KvdkftZJUqpyzF

## Importing The Libraries
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import os

"""## Change the directory"""

open('CarPrice_Assignment.csv')

pwd

"""## Load the dataset"""

df = pd.read_csv('CarPrice_Assignment.csv')

df.head()

"""## check for missing values"""

df.info()

df.isna().sum()

df.describe()

"""## Data Visualization"""

sns.countplot(data = df, x = 'enginetype')

sns.countplot(data = df, x = 'carbody')

sns.barplot(x = df['doornumber'], y = df['price'],)

sns.distplot(df['price'])

"""## Feature Selection"""

corr = df.corr()

plt.figure(figsize=(10,6))
sns.heatmap(df.corr() ,annot=True )

threshold  = 0.6
a = abs(corr['price'])
result = a[a>threshold]
result

"""## Training and Testing data"""

x = df[['enginesize','horsepower','carwidth','curbweight','citympg','highwaympg']]
y = df['price']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(x,y, test_size=0.3, 
                                                    random_state=101)

"""## Model Training """

from sklearn.ensemble import RandomForestRegressor

model1 = RandomForestRegressor()

model1.fit(X_train,y_train)

y_pred = model1.predict(X_test)

"""## Check Accuracy"""

from sklearn.metrics import r2_score
score = r2_score(y_pred,y_test)

score



